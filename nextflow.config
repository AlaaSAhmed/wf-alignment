//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
// 
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    out_dir = "output"
    wfversion = "v0.0.4"
    fastq = null
    references = null
    counts = "NO_COUNTS"
    demultiplex = false
    prefix = null
    batch = 100
    threads = 4
    aws_image_prefix = null
    aws_queue = null
}


executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process {
            container = "ontresearch/wf-alignment:${params.wfversion}"
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // profile using conda environments rather than docker
    // containers
    conda {
        docker {
            enabled = false
        }
        process {
            conda = "environment.yaml"
        }
        conda {
             cacheDir = ""
        }
    }

    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            container = "${params.aws_image_prefix}-wf-alignment:${params.wfversion}"
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
